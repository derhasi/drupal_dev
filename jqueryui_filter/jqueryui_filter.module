<?php
// $Id$

/**
 * @file
 *   A module to let users work with jquery ui in filtered text.
 */

/**
 * Implementation of hook_filter().
 */
function jqueryui_filter_filter($op, $delta = 0, $format = -1, $text = '', $cache_id  = 0) {

  switch ($op) {
    case 'list':
      return array(0 => t('Jquery UI filter'));

    case 'description':
      return t('Allows users to use jquery ui dialogs, tabs, etc. .');

    case 'prepare':
      //nothing
      return $text;

    case "process":

      // Additional CSS
      if (variable_get('jqueryui_filter_use_jqueryui_css', FALSE)) {
        $jqueryui_css = drupal_get_path('module', 'jquery_ui') .'/jquery.ui/themes/base/jquery-ui.css';
        drupal_add_css($jqueryui_css, 'module');
      }
      $tabs_css = drupal_get_path('module', 'jquery_ui') .'/jquery.ui/themes/base/ui.tabs.css';
      drupal_add_css($tabs_css, 'module');

      // Add necessary library.
      jquery_ui_add('ui.tabs'); // @TODO settings

      $class = "jqueryui-filter-tabs-$format";

      // Add classes to JS
      $settings = array('jqueryui_filter_tabs' => array($class => $class));
      drupal_add_js($settings, 'setting');

      // Set wrapper
      $text = "<div class=\"jqueryui-filter-tabs $class\">$text</div>";

      // Attach custom js
      drupal_add_js(drupal_get_path('module', 'jqueryui_filter') .'/jqueryui_filter_tabs.js', 'module');

      return $text;

    case 'settings':
      return array();
      //
      $id = "jqueryui_filter_$format";
      $form['jqueryui_filter_tabs'] = array(
        '#type' => 'fieldset',
        '#title' => t('Tabs'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
      );
      $form['jqueryui_filter_tabs'][$id .'_tabs_remove_wrapper_force'] = array(
        '#type' => 'checkbox',
        '#title' => t('Remove wrapper div'),
        '#default_value' => variable_get($id .'_tabs_wrapper_force',FALSE),
      );
      return $form;

    case 'no cache':
      return TRUE;

    default:
      return $text;
  }
}