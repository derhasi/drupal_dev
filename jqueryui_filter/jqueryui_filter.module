<?php
// $Id$

/**
 * @file
 *   A module to let users work with jquery ui in filtered text.
 */

/**
 * Implementation of hook_filter().
 */
function jqueryui_filter_filter($op, $delta = 0, $format = -1, $text = '', $cache_id  = 0) {

  switch ($op) {
    case 'list':
      return array(0 => t('Jquery UI filter'));

    case 'description':
      return t('Allows users to use jquery ui dialogs, tabs, etc. .');

    case 'prepare':
      //nothing
      return $text;

    case "process":
      // Add necessary bibs.
      jquery_ui_add('ui.tabs'); // @TODO settings

      // Add settings

      // Attach custom js

      return $text;

    case 'settings':
      $id = "jqueryui_filter_$format";

      $form['tabs'] = array(
        '#type' => 'fieldset',
        '#title' => t('Tabs'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
      );

      $form['tabs'][$id .'_tabs_selectors'] = array(
        '#type' => 'textfield',
        '#title' => t('Tab Template'),
        '#default_value' => variable_get($id .'_tabs_selectors','#tabs');
        '#description' => t('Enter a comma separated list of jquery selectors, that shall initiate the JQuery UI Tabs'),
      );
      $form['tabs'][$id .'_tabs_wrapper_class'] = array(
        '#type' => 'textfield',
        '#title' => t('Wrapper class'),
        '#default_value' => variable_get($id .'_tabs_wrapper_class','');
        '#description' => t('This class will be set with a div container as a wrapper, if none of the above selectors was found in text. Leave empty to have no wrapper div.'),
      );
      $form[$id] = $form;
      return $form;
    case 'no cache':
      return TRUE;
    default:
      return $text;

  }

}